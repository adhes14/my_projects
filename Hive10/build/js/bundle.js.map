{"version":3,"sources":["app.js"],"names":["pagina","iniciarApp","graficarFondoAcciones","graficarComposicionAcciones","datosFondoAcciones","mostrarSeccion","cambiarSeccion","async","resultado","fetch","db","json","response","ctx","document","getElementById","getContext","Chart","type","data","datasets","label","fill","borderColor","borderWidth","tension","pointBackgroundColor","pointBorderColor","options","parsing","xAxisKey","yAxisKey","responsive","error","console","log","ticker","prop","colores","forEach","e","push","obtenerColor","labels","backgroundColor","plugins","title","display","text","finicio","createElement","textContent","fcierre","vcierre","vinicio","vmax","vmin","resultados","querySelector","appendChild","seccionAnterior","classList","remove","add","tabAnterior","querySelectorAll","enlace","addEventListener","preventDefault","parseInt","target","dataset","fondo","color","i","Math","floor","random"],"mappings":"AAAA,IAAAA,OAAA,EAMA,SAAAC,aAEAC,wBAGAC,8BAGAC,qBAGAC,iBAGAC,iBAGAC,eAAAL,wBACA,IAEA,MAAAM,QAAAC,MAAA,wCACAC,QAAAF,EAAAG,QACAC,SAAAA,GAAAF,EAGAG,EAAAC,SAAAC,eAAA,SAAAC,WAAA,MACA,IAAAC,MAAAJ,EAAA,CACAK,KAAA,OACAC,KAAA,CAEAC,SAAA,CAAA,CACAC,MAAA,iBACAF,KAAAP,EACAU,MAAA,EACAC,YAAA,UACAC,YAAA,EACAC,QAAA,GACAC,qBAAA,mBACAC,iBAAA,sBAGAC,QAAA,CACAC,QAAA,CACAC,SAAA,QACAC,SAAA,cAEAC,YAAA,KAGA,MAAAC,GACAC,QAAAC,IAAAF,IAKA1B,eAAAJ,8BACA,IAEA,MAAAK,QAAAC,MAAA,qCACAC,QAAAF,EAAAG,QACAC,SAAAA,GAAAF,EACA0B,EAAA,GACAC,EAAA,GACAC,EAAA,GACA1B,EAAA2B,QAAAC,IACAJ,EAAAK,KAAAD,EAAAJ,QACAC,EAAAI,KAAAD,EAAAH,MACAC,EAAAG,KAAAC,kBAIA,MAAA7B,EAAAC,SAAAC,eAAA,eAAAC,WAAA,MACA,IAAAC,MAAAJ,EAAA,CACAK,KAAA,WACAC,KAAA,CACAwB,OAAAP,EACAhB,SAAA,CAAA,CACAC,MAAA,cACAF,KAAAkB,EACAO,gBAAAN,KAGAV,QAAA,CAKAiB,QAAA,CACAC,MAAA,CACAC,SAAA,EACAC,KAAA,2BAGAhB,YAAA,KAGA,MAAAC,GACAC,QAAAC,IAAAF,IAKA1B,eAAAH,qBACA,IAEA,MAAAI,QAAAC,MAAA,uCACAC,QAAAF,EAAAG,QACAC,SAAAA,GAAAF,EACAuC,EAAAnC,SAAAoC,cAAA,KACAD,EAAAE,YAAAvC,EAAAqC,QACA,MAAAG,EAAAtC,SAAAoC,cAAA,KACAE,EAAAD,YAAAvC,EAAAwC,QACA,MAAAC,EAAAvC,SAAAoC,cAAA,KACAG,EAAAF,YAAAvC,EAAAyC,QACA,MAAAC,EAAAxC,SAAAoC,cAAA,KACAI,EAAAH,YAAAvC,EAAA0C,QACA,MAAAC,EAAAzC,SAAAoC,cAAA,KACAK,EAAAJ,YAAAvC,EAAA2C,KACA,MAAAC,EAAA1C,SAAAoC,cAAA,KACAM,EAAAL,YAAAvC,EAAA4C,KAEA,MAAAC,EAAA3C,SAAA4C,cAAA,eACAD,EAAAE,YAAAV,GACAQ,EAAAE,YAAAP,GACAK,EAAAE,YAAAL,GACAG,EAAAE,YAAAJ,GACAE,EAAAE,YAAAH,GACAC,EAAAE,YAAAN,GAEA,MAAApB,GACAC,QAAAC,IAAAF,IAKA,SAAA5B,iBAEA,MAAAuD,EAAA9C,SAAA4C,cAAA,oBACAE,GACAA,EAAAC,UAAAC,OAAA,mBAGAhD,SAAA4C,cAAA,UAAA1D,QACA6D,UAAAE,IAAA,mBAGA,MAAAC,EAAAlD,SAAA4C,cAAA,iBACAM,GACAA,EAAAH,UAAAC,OAAA,UAIAhD,SAAA4C,cAAA,gBAAA1D,YACA6D,UAAAE,IAAA,UAGA,SAAAzD,iBACAQ,SAAAmD,iBAAA,gBAEA1B,QAAA2B,IACAA,EAAAC,iBAAA,QAAA3B,IACAA,EAAA4B,iBAEApE,OAAAqE,SAAA7B,EAAA8B,OAAAC,QAAAC,OAGAnE,qBAKA,SAAAqC,eACA,IACA+B,EAAA,IACA,IAAA,IAAAC,EAAA,EAAAA,EAAA,EAAAA,IACAD,GAHA,mBAGAE,KAAAC,MAAA,GAAAD,KAAAE,WAEA,OAAAJ,EArLA3D,SAAAqD,iBAAA,oBAAA,WACAlE","file":"bundle.js","sourcesContent":["let pagina = 1;\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    iniciarApp();\n});\n\nfunction iniciarApp() {\n    //Grafica del valor de cuota\n    graficarFondoAcciones();\n\n    //Grafica de la composicion\n    graficarComposicionAcciones()\n\n    //Mostrar datos del fondo\n    datosFondoAcciones();\n\n    //Resalta el div actual segun el tab al que se presiona\n    mostrarSeccion();\n\n    //Oculta o muestra una seccion segun el tab que se presiona\n    cambiarSeccion();\n}\n\nasync function graficarFondoAcciones() {\n    try {\n        //Extraer los datos de la API\n        const resultado = await fetch('https://api.coffetrading.com/vcuota2');\n        const db = await resultado.json();\n        const { response } = db;\n\n        //Graficar usando Chart.js\n        const ctx = document.getElementById('cuota').getContext('2d');\n        let myChart = new Chart(ctx, {\n            type: 'line',\n            data: {\n                // labels: fecha,\n                datasets: [{\n                    label: 'Valor de cuota',\n                    data: response,\n                    fill: true,\n                    borderColor: '#46bdc6',\n                    borderWidth: 2,\n                    tension: 0.2,\n                    pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n                    pointBorderColor: 'rgba(0, 0, 0, 0)'\n                }]\n            },\n            options: {\n                parsing: {\n                    xAxisKey: 'fecha',\n                    yAxisKey: 'valorcuota'\n                },\n                responsive: false\n            }\n        });\n    } catch (error) {\n        console.log(error);\n    }\n    \n}\n\nasync function graficarComposicionAcciones() {\n    try {\n        //Extraer los datos de la API\n        const resultado = await fetch('https://api.coffetrading.com/pie2');\n        const db = await resultado.json();\n        const { response } = db;\n        const ticker = [];\n        const prop = [];\n        const colores = [];\n        response.forEach(e => {\n            ticker.push(e.ticker);\n            prop.push(e.prop);\n            colores.push(obtenerColor());\n        });\n\n        //Graficar usando Chart.js\n        const ctx = document.getElementById('composicion').getContext('2d');\n        let myChart = new Chart(ctx, {\n            type: 'doughnut',\n            data: {\n                labels: ticker,\n                datasets: [{\n                    label: 'Composición',\n                    data: prop,\n                    backgroundColor: colores\n                }]\n            },\n            options: {\n                // parsing: {\n                //     xAxisKey: 'ticker',\n                //     yAxisKey: 'prop'\n                // },\n                plugins: {\n                    title: {\n                        display: true,\n                        text: 'Composición de activos'\n                    }\n                },\n                responsive: false\n            }\n        });\n    } catch (error) {\n        console.log(error);\n    }\n    \n}\n\nasync function datosFondoAcciones() {\n    try {\n        //Extraer los datos de la API\n        const resultado = await fetch('https://api.coffetrading.com/datos2');\n        const db = await resultado.json();\n        const { response } = db;\n        const finicio = document.createElement('P');\n        finicio.textContent = response.finicio;\n        const fcierre = document.createElement('P');\n        fcierre.textContent = response.fcierre;\n        const vcierre = document.createElement('P');\n        vcierre.textContent = response.vcierre;\n        const vinicio = document.createElement('P');\n        vinicio.textContent = response.vinicio;\n        const vmax = document.createElement('P');\n        vmax.textContent = response.vmax;\n        const vmin = document.createElement('P');\n        vmin.textContent = response.vmin;\n\n        const resultados = document.querySelector('.resultados');\n        resultados.appendChild(finicio);\n        resultados.appendChild(fcierre);\n        resultados.appendChild(vinicio);\n        resultados.appendChild(vmax);\n        resultados.appendChild(vmin);\n        resultados.appendChild(vcierre);\n\n    } catch (error) {\n        console.log(error);\n    }\n    \n}\n\nfunction mostrarSeccion() {\n    //Eliminar mostrar-seccion de la seccion anterior\n    const seccionAnterior = document.querySelector('.mostrar-seccion');\n    if( seccionAnterior ) {\n        seccionAnterior.classList.remove('mostrar-seccion');\n    }\n\n    const seccionActual = document.querySelector(`#fondo-${pagina}`);\n    seccionActual.classList.add('mostrar-seccion');\n\n    //Elimina actual del tab anterior\n    const tabAnterior = document.querySelector('.tabs .actual');\n    if( tabAnterior ) {\n        tabAnterior.classList.remove('actual');\n    }\n\n    //Resalta el tab actual\n    const tab = document.querySelector(`[data-fondo=\"${pagina}\"]`);\n    tab.classList.add('actual');\n}\n\nfunction cambiarSeccion() {\n    const enlaces = document.querySelectorAll('.tabs button');\n\n    enlaces.forEach( enlace => {\n        enlace.addEventListener('click', e => {\n            e.preventDefault();\n\n            pagina = parseInt(e.target.dataset.fondo);\n\n            //Llamar la funcion de mostrar seccion\n            mostrarSeccion();\n        })\n    })\n}\n\nfunction obtenerColor() {\n    let letters = '0123456789ABCDEF';\n    let color = '#';\n    for (var i = 0; i < 3; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}"]}